"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var md5 = require("./jslib/md5");
App({
    globalData: {},
    onLaunch: function () {
        var logs = wx.getStorageSync('logs') || [];
        logs.unshift(Date.now());
        wx.setStorageSync('logs', logs);
        wx.login({
            success: function (res) {
                console.log(res.code);
            },
        });
        test();
    },
});
function test() {
    var hello = "Hello World";
    console.log(hello);
    var Site = (function () {
        function Site() {
        }
        Site.prototype.name = function () {
            return "Runoob";
        };
        Site.prototype.haha = function () {
            console.log("say haha");
        };
        return Site;
    }());
    var obj = new Site();
    console.log(obj.name());
    obj.haha();
    var x;
    x = ["name", 66];
    console.log(x[0]);
    console.log(x[1]);
    var Color;
    (function (Color) {
        Color[Color["Red"] = 0] = "Red";
        Color[Color["Green"] = 1] = "Green";
        Color[Color["Blue"] = 2] = "Blue";
    })(Color || (Color = {}));
    var c = Color.Blue;
    console.log(c);
    var aa = 1;
    aa = "ce";
    aa = false;
    console.log(aa);
    var bb = 4.2;
    bb.toFixed();
    console.log(bb);
    var array = [1, false, "fine"];
    console.log(array[2]);
    var kk = ["aa", "bb"];
    console.log(kk);
    console.log("类型断言:");
    var str1 = "1";
    var str2 = str1;
    console.log(str2);
    console.log(typeof bb);
    console.log("方法:");
    buildName1("zz", "kk");
    buildName1("zz");
    buildName2("zz");
    console.log(buildName3("aa", "bb", "cc", "dd", "ff"));
    console.log("Number对象:");
    console.log(Number.MAX_VALUE);
    console.log(Number.MIN_VALUE);
    console.log(Number.NEGATIVE_INFINITY);
    console.log(Number.POSITIVE_INFINITY);
    console.log("引用js");
    console.log(md5.md5("zzz"));
}
function buildName1(firstName, lastName) {
    console.log(firstName + " " + lastName);
}
function buildName2(firstName, lastName) {
    if (lastName === void 0) { lastName = "gof"; }
    console.log(firstName + " " + lastName);
}
function buildName3(firstName) {
    var restOfName = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        restOfName[_i - 1] = arguments[_i];
    }
    return firstName + " " + restOfName.join(" ");
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBwLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiYXBwLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsaUNBQW9DO0FBR3BDLEdBQUcsQ0FBYTtJQUNkLFVBQVUsRUFBRSxFQUFFO0lBQ2QsUUFBUTtRQUVOLElBQU0sSUFBSSxHQUFHLEVBQUUsQ0FBQyxjQUFjLENBQUMsTUFBTSxDQUFDLElBQUksRUFBRSxDQUFBO1FBQzVDLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLEdBQUcsRUFBRSxDQUFDLENBQUE7UUFDeEIsRUFBRSxDQUFDLGNBQWMsQ0FBQyxNQUFNLEVBQUUsSUFBSSxDQUFDLENBQUE7UUFHL0IsRUFBRSxDQUFDLEtBQUssQ0FBQztZQUNQLE9BQU8sRUFBRSxVQUFBLEdBQUc7Z0JBQ1YsT0FBTyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLENBQUE7WUFFdkIsQ0FBQztTQUNGLENBQUMsQ0FBQTtRQUVGLElBQUksRUFBRSxDQUFDO0lBQ1QsQ0FBQztDQUNGLENBQUMsQ0FBQTtBQUVGLFNBQVMsSUFBSTtJQUNYLElBQU0sS0FBSyxHQUFXLGFBQWEsQ0FBQztJQUNwQyxPQUFPLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBRW5CO1FBQUE7UUFRQSxDQUFDO1FBUEMsbUJBQUksR0FBSjtZQUNFLE9BQU8sUUFBUSxDQUFBO1FBQ2pCLENBQUM7UUFFRCxtQkFBSSxHQUFKO1lBQ0UsT0FBTyxDQUFDLEdBQUcsQ0FBQyxVQUFVLENBQUMsQ0FBQztRQUMxQixDQUFDO1FBQ0gsV0FBQztJQUFELENBQUMsQUFSRCxJQVFDO0lBRUQsSUFBSSxHQUFHLEdBQUcsSUFBSSxJQUFJLEVBQUUsQ0FBQztJQUNyQixPQUFPLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxJQUFJLEVBQUUsQ0FBQyxDQUFDO0lBQ3hCLEdBQUcsQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUVYLElBQUksQ0FBbUIsQ0FBQztJQUN4QixD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RCxTQUFTLFVBQVUsQ0FBQyxTQUFpQjtJQUFFLG9CQUF1QjtTQUF2QixVQUF1QixFQUF2QixxQkFBdUIsRUFBdkIsSUFBdUI7UUFBdkIsbUNBQXVCOztJQUM1RCxPQUFVLFNBQVMsU0FBSSxVQUFVLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBRyxDQUFBO0FBQy9DLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgbWQ1ID0gcmVxdWlyZSgnLi9qc2xpYi9tZDUnKTtcblxuLy8gYXBwLnRzXG5BcHA8SUFwcE9wdGlvbj4oe1xuICBnbG9iYWxEYXRhOiB7fSxcbiAgb25MYXVuY2goKSB7XG4gICAgLy8g5bGV56S65pys5Zyw5a2Y5YKo6IO95YqbXG4gICAgY29uc3QgbG9ncyA9IHd4LmdldFN0b3JhZ2VTeW5jKCdsb2dzJykgfHwgW11cbiAgICBsb2dzLnVuc2hpZnQoRGF0ZS5ub3coKSlcbiAgICB3eC5zZXRTdG9yYWdlU3luYygnbG9ncycsIGxvZ3MpXG5cbiAgICAvLyDnmbvlvZVcbiAgICB3eC5sb2dpbih7XG4gICAgICBzdWNjZXNzOiByZXMgPT4ge1xuICAgICAgICBjb25zb2xlLmxvZyhyZXMuY29kZSlcbiAgICAgICAgLy8g5Y+R6YCBIHJlcy5jb2RlIOWIsOWQjuWPsOaNouWPliBvcGVuSWQsIHNlc3Npb25LZXksIHVuaW9uSWRcbiAgICAgIH0sXG4gICAgfSlcblxuICAgIHRlc3QoKTtcbiAgfSxcbn0pXG5cbmZ1bmN0aW9uIHRlc3QoKSB7XG4gIGNvbnN0IGhlbGxvOiBTdHJpbmcgPSBcIkhlbGxvIFdvcmxkXCI7XG4gIGNvbnNvbGUubG9nKGhlbGxvKTtcblxuICBjbGFzcyBTaXRlIHtcbiAgICBuYW1lKCk6IFN0cmluZyB7XG4gICAgICByZXR1cm4gXCJSdW5vb2JcIlxuICAgIH1cblxuICAgIGhhaGEoKTogdm9pZCB7XG4gICAgICBjb25zb2xlLmxvZyhcInNheSBoYWhhXCIpO1xuICAgIH1cbiAgfVxuXG4gIHZhciBvYmogPSBuZXcgU2l0ZSgpO1xuICBjb25zb2xlLmxvZyhvYmoubmFtZSgpKTtcbiAgb2JqLmhhaGEoKTtcblxuICBsZXQgeDogW1N0cmluZywgbnVtYmVyXTtcbiAgeCA9IFtcIm5hbWVcIiwgNjZdO1xuICBjb25zb2xlLmxvZyh4WzBdKTtcbiAgY29uc29sZS5sb2coeFsxXSk7XG5cbiAgLy8g5p6a5Li+XG4gIGVudW0gQ29sb3Ige1xuICAgIFJlZCxcbiAgICBHcmVlbixcbiAgICBCbHVlXG4gIH1cblxuICBsZXQgYyA9IENvbG9yLkJsdWU7XG4gIGNvbnNvbGUubG9nKGMpO1xuXG5cbiAgLy8gYW55XG4gIGxldCBhYSA6IGFueSA9IDE7XG4gIGFhID0gXCJjZVwiO1xuICBhYSA9IGZhbHNlO1xuICBjb25zb2xlLmxvZyhhYSk7XG5cbiAgdmFyIGJiID0gNC4yO1xuICBiYi50b0ZpeGVkKCk7XG4gIGNvbnNvbGUubG9nKGJiKTtcblxuICBsZXQgYXJyYXk6IGFueVtdID0gWzEsIGZhbHNlLCBcImZpbmVcIl07XG4gIGNvbnNvbGUubG9nKGFycmF5WzJdKTtcblxuICB2YXIga2sgOiBBcnJheTxTdHJpbmc+ID0gW1wiYWFcIiwgXCJiYlwiXTtcbiAgY29uc29sZS5sb2coa2spO1xuXG4gIC8vIOexu+Wei+aWreiogFxuICBjb25zb2xlLmxvZyhcIuexu+Wei+aWreiogDpcIik7XG4gIHZhciBzdHIxID0gXCIxXCI7XG4gIHZhciBzdHIyIDogbnVtYmVyID0gPG51bWJlcj4gPGFueT5zdHIxO1xuICBjb25zb2xlLmxvZyhzdHIyKTtcbiAgY29uc29sZS5sb2codHlwZW9mIGJiKTtcblxuXG4gIC8vIOaWueazlVxuICBjb25zb2xlLmxvZyhcIuaWueazlTpcIik7XG4gIGJ1aWxkTmFtZTEoXCJ6elwiLFwia2tcIik7XG4gIGJ1aWxkTmFtZTEoXCJ6elwiKTtcbiAgYnVpbGROYW1lMihcInp6XCIpO1xuICBjb25zb2xlLmxvZyhidWlsZE5hbWUzKFwiYWFcIixcImJiXCIsXCJjY1wiLFwiZGRcIixcImZmXCIpKTtcblxuICAvLyBOdW1iZXLlr7nosaFcbiAgY29uc29sZS5sb2coXCJOdW1iZXLlr7nosaE6XCIpO1xuICBjb25zb2xlLmxvZyhOdW1iZXIuTUFYX1ZBTFVFKTtcbiAgY29uc29sZS5sb2coTnVtYmVyLk1JTl9WQUxVRSk7XG4gIGNvbnNvbGUubG9nKE51bWJlci5ORUdBVElWRV9JTkZJTklUWSk7XG4gIGNvbnNvbGUubG9nKE51bWJlci5QT1NJVElWRV9JTkZJTklUWSk7XG5cbiAgLy8g5byV55SoanNcbiAgY29uc29sZS5sb2coXCLlvJXnlKhqc1wiKTtcbiAgY29uc29sZS5sb2cobWQ1Lm1kNShcInp6elwiKSk7XG59XG5cbi8vIOWPr+mAieWPguaVsFxuZnVuY3Rpb24gYnVpbGROYW1lMShmaXJzdE5hbWU6IHN0cmluZywgbGFzdE5hbWU/OiBTdHJpbmcpIHtcbiAgY29uc29sZS5sb2coYCR7Zmlyc3ROYW1lfSAke2xhc3ROYW1lfWApO1xufVxuXG4vLyDpu5jorqTlj4LmlbBcbmZ1bmN0aW9uIGJ1aWxkTmFtZTIoZmlyc3ROYW1lOiBzdHJpbmcsIGxhc3ROYW1lOiBTdHJpbmcgPSBcImdvZlwiKSB7XG4gIGNvbnNvbGUubG9nKGAke2ZpcnN0TmFtZX0gJHtsYXN0TmFtZX1gKTtcbn1cblxuLy8g5Ymp5L2Z5Y+C5pWwXG5mdW5jdGlvbiBidWlsZE5hbWUzKGZpcnN0TmFtZTogc3RyaW5nLCAuLi5yZXN0T2ZOYW1lOiBzdHJpbmdbXSk6IHN0cmluZyB7XG4gIHJldHVybiBgJHtmaXJzdE5hbWV9ICR7cmVzdE9mTmFtZS5qb2luKFwiIFwiKX1gXG59Il19